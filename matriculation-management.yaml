openapi: "3.0.0"
info:
  description: "This is the Matriculation API for UC4."
  version: "0.8.1"
  title: "UC4"
servers:
  - url: https://uc4.cs.upb.de/api/matriculation-management
tags:
- name: "Version Management"
  description: "Everything about the Version"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/upb-uc4"
- name: "Matriculation Management"
  description: "Everything about the user"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/upb-uc4"
paths:
  /version:
    get:
      tags:
      - "Version Management"
      summary: "Get version"
      description: "Returns the version of the current service"
      operationId: "getVersion"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonVersionNumber'
  /{username}:
    put:
      tags:
      - "Matriculation Management"
      summary: "Add fieldOfStudy with semester to MatriculationData"
      description: "Update MatriculationData with the given information, enrolling the student in the given semester, in the given fieldOfStudy. If MatriculationData does not exist, it will be created. Can only be invoked by Admins."
      operationId: "updateMatriculationData"
      security:
        - uc4_token_login: [] 
        - uc4_token_login_header: []
      requestBody:
        description: "PutMessageMatriculationData, containing the semester the student will be enrolled in, and the corresponding fieldOfStudy."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMessageMatriculation'
            examples:
              PutMessageMatriculation:
                $ref: '#/components/examples/ExamplePutMessageMatriculation'
      parameters:
      - in: "path"
        name: "username"
        required: true
        schema: 
          type: "string"
      responses:
        "200":
          description: "OK"
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatriculationData'
              examples:
                MatriculationData:
                  $ref: '#/components/examples/ExampleMatriculationData'
          headers:
            Location:
              schema:
                type: string
                description: "URI of the newly created MatriculationData"
        "400":
          description: | 
            Bad Request  
            types: MalformedLoginToken, Deserialization, JsonValidation, MultipleAuthorizationError
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GenericError'
                  - $ref: '#/components/schemas/DetailedError'
        "401":
          description: |
            Unauthorized  
            types: JwtAuthorization, LoginTokenExpired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        "403":
          description: |
            Forbidden  
            types: NotEnoughPrivileges
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        "422":
          description: |
            Unprocessable Entity  
            types: Validation, ValidationTimeout, LoginTokenSignatureInvalid, HLUnprocessableEntity
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GenericError'
                  - $ref: '#/components/schemas/DetailedError'
  /history/{username}:
    get:
      tags:
      - "Matriculation Management"
      security:
        - uc4_token_login: [] 
        - uc4_token_login_header: []
      summary: "Get MatriculationData for the specified student"
      description: "Get MatriculationData of specified student."
      operationId: "getMatriculationData"
      parameters:
      - in: "path"
        name: "username"
        required: true
        schema: 
          type: "string"
      responses:
          "200":
            description: "OK"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MatriculationData'
                examples:
                  MatriculationData:
                    $ref: '#/components/examples/ExampleMatriculationData'
          "400":
            description: |
              Bad Request    
              types: MalformedLoginToken, MultipleAuthorizationError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
          "401":
            description: |
              Unauthorized  
              types: JwtAuthorization, LoginTokenExpired
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
          "403":
            description: |
              Forbidden  
              types: NotEnoughPrivileges, OwnerMismatch
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
          "404":
            description: |
              Not Found  
              types: HLNotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
          "422":
            description: |
              Unprocessable Entity  
              types: LoginTokenSignatureInvalid
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DetailedError'
components:
  securitySchemes:
    uc4_token_login:
      type: apiKey
      in: cookie
      name: login
    uc4_token_login_header:
      type: http
      scheme: bearer
  schemas:
    PutMessageMatriculation:
      type: "object"
      properties:
        matriculation:
          type: array
          items:
            $ref: '#/components/schemas/SubjectMatriculation'
    MatriculationData:
      type: "object"
      properties:
        matriculationId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        matriculationStatus:
          type: array
          items:
            $ref: '#/components/schemas/SubjectMatriculation'
    SubjectMatriculation:
      type: "object"
      properties:
        fieldOfStudy:
          type: string
          enum: ["Computer Science", "Philosophy","Media Sciences","Economics","Mathematics","Physics","Chemistry","Education","Sports Science","Japanology","Spanish Culture","Pedagogy","Business Informatics","Linguistics"]
        semesters:
          type: array
          items:
            type: string
    GenericError:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/errors.yaml#/components/schemas/GenericError'
        - type: object
    DetailedError:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/errors.yaml#/components/schemas/DetailedError'
        - type: object
    JsonVersionNumber:
      type: object
      properties:
        versionNumber:
          type: string
  examples:
    ExamplePutMessageMatriculation:
      summary: "Example for PutMessageMatriculation"
      value:
        matriculation:
          - fieldOfStudy: "Computer Science"
            semesters:
              - "SS2020"
          - fieldOfStudy: "Philosophy"
            semesters: 
              - "SS2020"
    ExampleMatriculationData:
      summary: "Example for MatriculationData"
      value:
        matriculationId: "1234567"
        firstName: "Luke"
        lastName: "Skywalker"
        birthDate: "1950-12-24"
        matriculationStatus:
          - fieldOfStudy: "Computer Science"
            semesters:
              - "WS2019/20"
              - "SS2020"
          - fieldOfStudy: "Philosophy"
            semesters: 
              - "SS2020"
       
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
