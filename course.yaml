swagger: "2.0"
info:
  description: "This is the Course API for UC4."
  version: "0.3.1"
  title: "UC4"
host: "localhost:9000"
basePath: "/course-management"
tags:
- name: "Course Management"
  description: "Everything about the courses"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/upb-uc4"
schemes:
- "http"
paths:
  /courses:
    post:
      tags:
      - "Course Management"
      summary: "Add a new course to the database"
      description: "Adds a new course to the database after verification. ID field is not used and can be set arbitrarily"
      operationId: "addCourse"
      security:
        - uc4_auth: [] 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Course object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        "201":
          description: "Course Created"
        "400":
          schema:
            $ref: '#/definitions/Error'
          description: |
            Bad Request
            Custom error codes
            | Error Code (name)| Details |
            |-----|-----|
            | 10   |  Course name must not be empty   |
            | 11 | Course name has invalid characters |
            | 20 | Course type must be one of ["Lecture", "Seminar", "Project Group"]  |
            | 30 | startDate must be the following format "yyyy-mm-dd" |
            | 40 | endDate must be the following format "yyyy-mm-dd" | 
            | 50 | ects must be a positive integer number |
            | 60 | lecturerID unknown |
            | 70 | maxParticipants must be a positive integer number |
            | 80 | language must be one of ["German", "English"] |
            | 90 | description invalid characters |
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "409":
          description: "ID already exists"
    get:
      tags:
      - "Course Management"
      summary: "Get all courses"
      security:
        - uc4_auth: [] 
      description: "Returns all courses"
      operationId: "getAllCourses"
      parameters:
      - name: "courseName"
        in: "query"
        description: "Course name to filter by (fuzzy)"
        required: false
        type: "string"
      - name: "lecturerId"
        in: "query"
        description: "LecturerId (username) to filter by"
        required: false
        type: "string"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Course"
        "401":
          description: "Unauthorized"
  /courses/{id}:
    get:
      tags:
      - "Course Management"
      security:
        - uc4_auth: []
      summary: "Find course by course id"
      description: "Find course by course id"
      operationId: "findCourseByCourseId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "course id to filter by"
        required: true
        type: "string"
      responses:
          "200":
            description: "successful operation"
            schema:
              $ref: "#/definitions/Course"
          "401":
            description: "Unauthorized"
          "404":
            description: "No course with this ID not found"
    delete:
      tags:
      - "Course Management"
      summary: "Deletes a course"
      description: ""
      security:
        - uc4_auth: [] 
      operationId: "deleteCourse"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of course to delete"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Bad Request (query parameter)"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Course not found"
    put:
      tags:
      - "Course Management"
      summary: "Update an existing course"
      description: ""
      operationId: "updateCourse"
      security:
        - uc4_auth: [] 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of course to update"
        required: true
        type: "string"
      - in: "body"
        name: "CourseObject"
        description: "Course object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: |
            Bad Request
            Custom error codes
            | Error Code (name)| Details |
            |-----|-----|
            | 00 | Course ID and ID in path do not match |
            | 10 |  Course name must not be empty   |
            | 11 | Course name has invalid characters |
            | 20 | Course type must be one of ["Lecture", "Seminar", "Project Group"]  |
            | 30 | startDate must be the following format "yyyy-mm-dd" |
            | 40 | endDate must be the following format "yyyy-mm-dd" | 
            | 50 | ects must be a positive integer number |
            | 60 | lecturerID unknown |
            | 70 | maxParticipants must be a positive integer number |
            | 80 | language must be one of ["German", "English"] |
            | 90 | description invalid characters |
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Course not found"
securityDefinitions:
  uc4_auth:
    type: basic
definitions:
  Course:
    type: "object"
    properties:
      courseId:
        type: string
      courseName:
        type: string
      courseType:
        type: string
        enum: ["Lecture", "Seminar", "Project Group"]
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      ects:
        type: "integer"
        format: "int32"
        minimum: 1
      lecturerId:
        type: "string"
      maxParticipants: 
        type: "integer"
        format: "int32"
        minimum: 1
      currentParticipants: 
        type: "integer"
        format: "int32"
      courseLanguage: 
        type: "string"
        enum: ["German", "English"]
      courseDescription:
        type: "string"
  Error:
    type: object
    properties:
      name:
        type: string
      detail:
        type: string
    required:
      - code
      - message
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"