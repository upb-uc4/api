openapi: "3.0.0"
info:
  description: "This is the Course API for UC4."
  version: "0.11.1"
  title: "UC4"

servers:
  - url: https://uc4.cs.upb.de/api/course-management

tags:
- name: "Version Management"
  description: "Everything about the Version"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/upb-uc4"
- name: "Course Management"
  description: "Everything about the courses"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/upb-uc4"

paths:
  /version:
    get:
      tags:
      - "Version Management"
      summary: "Get version"
      description: "Returns the version of the current service"
      operationId: "getVersion"

      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonVersionNumber'
  /courses:
    post:
      tags:
      - "Course Management"
      summary: "Add a new course to the database"
      description: "Adds a new course to the database after verification. ID field is not used and can be set arbitrarily"
      operationId: "addCourse"
      security:
        - uc4_token_login: []
        - uc4_token_login_header: []
      requestBody:
        description: "Course object that needs to be added to the database"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          headers:
            Location:
              schema:
                type: string
                description: "URI of the newly created course"
        "400":
          description: | 
            Bad Request  
            types: MalformedLoginToken, Deserialization, JsonValidation, MultipleAuthorizationError
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GenericError'
                  - $ref: '#/components/schemas/DetailedError'
        "401":
          description: |
            Unauthorized  
            types: JwtAuthorization, LoginTokenExpired
          content:
            application/json:  
              schema:
                $ref: '#/components/schemas/GenericError'
        "403":
          description: |
            Forbidden  
            types: NotEnoughPrivileges, OwnerMismatch
          content:
            application/json:  
              schema:
                $ref: '#/components/schemas/GenericError'
        "422":
          description: |
            Unprocessable Entity  
            types: Validation, ValidationTimeout, LoginTokenSignatureInvalid
          content:
            application/json: 
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GenericError'
                  - $ref: '#/components/schemas/DetailedError'
    get:
      tags:
      - "Course Management"
      summary: "Get all courses"
      description: "Returns all courses, optionally filtered by query parameters"
      operationId: "getAllCourses"
      parameters:
      - name: "courseName"
        in: "query"
        description: "Course name to filter by (fuzzy)"
        required: false
        schema:
          type: 'string'
      - name: "lecturerId"
        in: "query"
        description: "LecturerId (username) to filter by"
        required: false
        schema:
          type: 'string'
      - name: "modules"
        in: "query"
        description: "Module Ids to filter by"
        required: false
        schema:
          type: 'string'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Course'
  /courses/{id}:
    get:
      tags:
      - "Course Management"
      security:
        - uc4_token_login: []
        - uc4_token_login_header: []
      summary: "Find course by course id"
      description: "Find course by course id"
      operationId: "findCourseByCourseId"
      parameters:
      - name: "id"
        in: "path"
        description: "course id to filter by"
        required: true
        schema:
          type: "string"
      responses:
          "200":
            description: "OK"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Course'
          "400":
            description: |
              Bad Request    
              types: MalformedLoginToken, MultipleAuthorizationError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
          "401":
            description: |
              Unauthorized  
              types: JwtAuthorization, LoginTokenExpired
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
          "404":
            description: |
              Not Found  
              types: KeyNotFound
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
          "422":
            description: |
              Unprocessable Entity   
              types: LoginTokenSignatureInvalid
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
    delete:
      tags:
      - "Course Management"
      summary: "Deletes a course"
      description: ""
      security:
        - uc4_token_login: [] 
        - uc4_token_login_header: []
      operationId: "deleteCourse"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of course to delete"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
        "400":
            description: |
              Bad Request    
              types: MalformedLoginToken, MultipleAuthorizationError
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
        "401":
          description: |
            Unauthorized  
            types: JwtAuthorization, LoginTokenExpired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        "403":
          description: |
            Forbidden  
            types: NotEnoughPrivileges, OwnerMismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        "404":
          description: |
            Not Found  
            types: KeyNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        "422":
            description: |
              Unprocessable Entity   
              types: LoginTokenSignatureInvalid
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericError'
    put:
      tags:
      - "Course Management"
      summary: "Update an existing course"
      description: ""
      operationId: "updateCourse"
      security:
        - uc4_token_login: [] 
        - uc4_token_login_header: []
      parameters:
      - name: "id"
        in: "path"
        description: "id of course to update"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Course object that needs to be updated in the database"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        "200":
          description: "OK"
        "400":
          description: | 
            Bad Request  
            types: MalformedLoginToken, Deserialization, PathParameterMismatch, JsonValidation, MultipleAuthorizationError
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GenericError'
                  - $ref: '#/components/schemas/DetailedError'
        "401":
          description: |
            Unauthorized  
            types: JwtAuthorization, LoginTokenExpired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        "403":
          description: |
            Forbidden  
            types: NotEnoughPrivileges, OwnerMismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        "422":
          description: |
            Unprocessable Entity  
            types: Validation, ValidationTimeout, LoginTokenSignatureInvalid
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GenericError'
                  - $ref: '#/components/schemas/DetailedError'

components:
  securitySchemes:
    uc4_token_login:
      type: apiKey
      in: cookie
      name: login
    uc4_token_login_header:
      type: http
      scheme: bearer
  schemas:
    Course:
      type: "object"
      properties:
        courseId:
          type: string
        modules:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/exam-reg-management.yaml#/components/schemas/Module'
        courseName:
          type: string
        courseType:
          type: string
          enum: ["Lecture", "Seminar", "Project Group"]
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        ects:
          type: "integer"
          format: "int32"
          minimum: 1
        lecturerId:
          type: "string"
        maxParticipants: 
          type: "integer"
          format: "int32"
          minimum: 1
        currentParticipants: 
          type: "integer"
          format: "int32"
        courseLanguage: 
          type: "string"
          enum: ["German", "English"]
        courseDescription:
          type: "string"
    JsonVersionNumber:
      type: object
      properties:
        versionNumber:
          type: string
    GenericError:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/errors.yaml#/components/schemas/GenericError'
        - type: object
    DetailedError:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/errors.yaml#/components/schemas/DetailedError'
        - type: object
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io" 