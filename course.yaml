swagger: "2.0"
info:
  description: "This is the Course API for UC4."
  version: "0.1.2"
  title: "UC4"
  termsOfService: "uc4.cs.upb.de"
  contact:
    email: "apiteam@uc4.cs.upb.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "uc4.cs.upb.de"
basePath: "/v2"
tags:
- name: "course"
  description: "Everything about the courses"
  externalDocs:
    description: "Find out more (add link to our documentation wiki)"
    url: "https://github.com/upb-uc4"
schemes:
- "https"
paths:
  /course:
    post:
      tags:
      - "course"
      summary: "Add a new course to the database"
      description: ""
      operationId: "addCourse"
      security:
        - uc4_auth: [] 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Course object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        "201":
          description: "Course Created"
        "400":
          schema:
            $ref: '#/definitions/Error'
          description: |
            Bad Request
            Custom error codes
            | Error Code (name)| Details |
            |-----|-----|
            | 10   |  Course name must not be empty   |
            | 11 | Course name has invalid characters |
            | 20 | Course type must be one of ["Lecture", "Seminar", "Project Group"]  |
            | 30 | startDate must be the following format "yyyy-mm-dd" |
            | 40 | endDate must be the following format "yyyy-mm-dd" | 
            | 50 | ects must be a positive integer number |
            | 60 | lecturerID unknown |
            | 70 | maxParticipants must be a positive integer number |
            | 80 | language must be one of ["German", "English"] |
            | 90 | description invalid characters |
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "409":
          description: "ID already exists"
    put:
      tags:
      - "course"
      summary: "Update an existing course"
      description: ""
      operationId: "updateCourse"
      security:
        - uc4_auth: [] 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CourseObject"
        description: "Course object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: |
            Bad Request
            Custom error codes
            | Error Code (name)| Details |
            |-----|-----|
            | 10   |  Course name must not be empty   |
            | 11 | Course name has invalid characters |
            | 20 | Course type must be one of ["Lecture", "Seminar", "Project Group"]  |
            | 30 | startDate must be the following format "yyyy-mm-dd" |
            | 40 | endDate must be the following format "yyyy-mm-dd" | 
            | 50 | ects must be a positive integer number |
            | 60 | lecturerID unknown |
            | 70 | maxParticipants must be a positive integer number |
            | 80 | language must be one of ["German", "English"] |
            | 90 | description invalid characters |
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Course not found"
    delete:
      tags:
      - "course"
      summary: "Deletes a course"
      description: ""
      security:
        - uc4_auth: [] 
      operationId: "deleteCourse"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Course ID to delete"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Bad Request (query parameter)"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Course not found"
    get:
      tags:
      - "course"
      summary: "Get all courses"
      security:
        - uc4_auth: [] 
      description: "Returns all courses"
      operationId: "getAllCourses"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Course"
        "401":
          description: "Unauthorized"
  /course/findByLecturerId:
    get:
      tags:
      - "course"
      security:
        - uc4_auth: [] 
      summary: "Find courses by lecturer Id"
      description: "Find courses by lecturer with the provided ID"
      operationId: "findCourseByLecturerId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Lecturer ID to filter by"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Course"
        "401":
          description: "Unauthorized"
  /course/findByCourseName:
    get:
      tags:
      - "course"
      security:
        - uc4_auth: [] 
      summary: "Find courses by course name"
      description: "Find courses by course name"
      operationId: "findCoursesByCourseName"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Course Name to filter by"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Course"
        "401":
          description: "Unauthorized"
  /course/findByCourseId:
    get:
      tags:
      - "course"
      security:
        - uc4_auth: [] 
      summary: "Find course by course Id"
      description: "Find course by course ID"
      operationId: "findCourseByCourseId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Course ID to filter by"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Course"
        "401":
          description: "Unauthorized"
        "404":
          description: "ID not found"
securityDefinitions:
  uc4_auth:
    type: basic
definitions:
  Course:
    type: "object"
    properties:
      courseId:
        type: "integer"
        format: "int64"
      courseName:
        type: string
      courseType:
        type: string
        enum: ["Lecture", "Seminar", "Project Group"]
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      ects:
        type: "integer"
        format: "int32"
      lecturerId:
        type: "string"
      maxParticipants: 
        type: "integer"
        format: "int32"
      currentParticipants: 
        type: "integer"
        format: "int32"
      courseLanguage: 
        type: "string"
        enum: ["German", "English"]
      courseDescription:
        type: "string"
  Error:
    type: object
    properties:
      name:
        type: string
      detail:
        type: string
    required:
      - code
      - message
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"