swagger: "2.0"
info:
  description: "This is the Course API for UC4."
  version: "0.4.1"
  title: "UC4"
host: "uc4.cs.upb.de/api"
basePath: "/hl-course-management"
tags:
- name: "Version Management"
  description: "Everything about the Version"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/upb-uc4"
- name: "Course Management"
  description: "Everything about the courses"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/upb-uc4"

schemes:
- "https"
paths:
  /version:
    get:
      tags:
      - "Version Management"
      summary: "Get version"
      description: "Returns the version of the current service"
      operationId: "getVersion"
      produces:
      - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: '#/definitions/JsonVersionNumber'
  /courses:
    post:
      tags:
      - "Course Management"
      summary: "Add a new course to the database"
      description: "Adds a new course to the database after verification. ID field is not used and can be set arbitrarily"
      operationId: "addCourse"
      security:
        - uc4_auth: [] 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Course object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/Course"
          headers:
            Location:
              type: string
              description: "URI of the newly created course"
        "400":
          description: | 
            Bad Request 
            
            detail contains deserialization error
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: |
            Unauthorized  
            types: authorization error
          schema:
            $ref: '#/definitions/GenericError'
        "403":
          description: |
            Forbidden  
            types: not enough privileges, owner mismatch
          schema:
            $ref: '#/definitions/GenericError'
        "409":
          description: |
            Conflict  
            types: key duplicate
          schema:
            $ref: '#/definitions/GenericError'
        "422":
          description: |
            Unprocessable Entity  
            types: validation error
          schema:
            $ref: '#/definitions/DetailedError'
          
    get:
      tags:
      - "Course Management"
      summary: "Get all courses"
      security:
        - uc4_auth: [] 
      description: "Returns all courses"
      operationId: "getAllCourses"
      parameters:
      - name: "courseName"
        in: "query"
        description: "Course name to filter by (fuzzy)"
        required: false
        type: "string"
      - name: "lecturerId"
        in: "query"
        description: "LecturerId (username) to filter by"
        required: false
        type: "string"
      produces:
      - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Course"
        "401":
          description: |
            Unauthorized  
            types: authorization error
          schema:
            $ref: '#/definitions/GenericError'
  /courses/{id}:
    get:
      tags:
      - "Course Management"
      security:
        - uc4_auth: []
      summary: "Find course by course id"
      description: "Find course by course id"
      operationId: "findCourseByCourseId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "course id to filter by"
        required: true
        type: "string"
      responses:
          "200":
            description: "OK"
            schema:
              $ref: "#/definitions/Course"
          "401":
            description: |
              Unauthorized  
              types: authorization error
            schema:
              $ref: '#/definitions/GenericError'
          "404":
            description: |
              Not Found  
              types: key not found
            schema:
              $ref: '#/definitions/GenericError'
    delete:
      tags:
      - "Course Management"
      summary: "Deletes a course"
      description: ""
      security:
        - uc4_auth: [] 
      operationId: "deleteCourse"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of course to delete"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
        "401":
          description: |
            Unauthorized  
            types: authorization error
          schema:
            $ref: '#/definitions/GenericError'
        "403":
          description: |
            Forbidden  
            types: not enough privileges, owner mismatch
          schema:
            $ref: '#/definitions/GenericError'
        "404":
          description: |
            Not Found  
            types: key not found
          schema:
            $ref: '#/definitions/GenericError'
    put:
      tags:
      - "Course Management"
      summary: "Update an existing course"
      description: ""
      operationId: "updateCourse"
      security:
        - uc4_auth: [] 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of course to update"
        required: true
        type: "string"
      - in: "body"
        name: "CourseObject"
        description: "Course object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        "200":
          description: "OK"
        "400":
          description: |
            Bad Request  
            types: path parameter mismatch  
            Note: on deserialization exception, Error of schema "Error" is thrown
          schema:
            $ref: '#/definitions/GenericError'
        "401":
          description: |
            Unauthorized  
            types: authorization error
          schema:
            $ref: '#/definitions/GenericError'
        "403":
          description: |
            Forbidden  
            types: not enough privileges, owner mismatch
          schema:
            $ref: '#/definitions/GenericError'
        "404":
          description: |
            Not Found  
            types: key not found
          schema:
            $ref: '#/definitions/GenericError'
        "422":
          description: |
            Unprocessable Entity  
            types: validation error
          schema:
            $ref: '#/definitions/DetailedError'
            
securityDefinitions:
  uc4_auth:
    type: basic
definitions:
  Course:
    type: "object"
    properties:
      courseId:
        type: string
      courseName:
        type: string
      courseType:
        type: string
        enum: ["Lecture", "Seminar", "Project Group"]
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      ects:
        type: "integer"
        format: "int32"
        minimum: 1
      lecturerId:
        type: "string"
      maxParticipants: 
        type: "integer"
        format: "int32"
        minimum: 1
      currentParticipants: 
        type: "integer"
        format: "int32"
      courseLanguage: 
        type: "string"
        enum: ["German", "English"]
      courseDescription:
        type: "string"
  Error:
    type: object
    properties:
      name:
        type: string
      detail:
        type: string
    required:
      - code
      - message
  GenericError:
    type: object
    properties:
      type:
        type: string
        enum: [
          "path parameter mismatch", 
          "wrong object",
          "authorization error",
          "not enough privileges",
          "owner mismatch",
          "key not found",
          "key duplicate",
          "teapot"
        ]
      title:
        type: string
    required:
      - code
      - message
  DetailedError:
    type: object
    properties:
      type:
        type: string
        enum: [
          "validation error", 
          "uneditable fields"
        ]
      title:
        type: string
      invalidParams:
        type: array
        items:
          $ref: "#/definitions/SimpleError"
    required:
      - code
      - message
  SimpleError:
    type: object
    properties:
      name:
        type: string
      reason:
        type: string
  JsonVersionNumber:
    type: object
    properties:
      versionNumber:
        type: string
#    Error:
#      allOf:
#        - $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/errors.yaml#/components/schemas/Error'
#        - type: object
#    GenericError:
#      allOf:
#        - $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/errors.yaml#/components/schemas/GenericError'
#        - type: object
#    DetailedError:
#      allOf:
#        - $ref: 'https://raw.githubusercontent.com/upb-uc4/api/develop/errors.yaml#/components/schemas/DetailedError'
#        - type: object
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"